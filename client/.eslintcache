[{"D:\\diplom\\client\\src\\index.js":"1","D:\\diplom\\client\\src\\App.js":"2","D:\\diplom\\client\\src\\store\\UserStore.js":"3","D:\\diplom\\client\\src\\store\\DeviceStore.js":"4","D:\\diplom\\client\\src\\components\\NavBar.js":"5","D:\\diplom\\client\\src\\components\\AppRouter.js":"6","D:\\diplom\\client\\src\\http\\userAPI.js":"7","D:\\diplom\\client\\src\\routes.js":"8","D:\\diplom\\client\\src\\http\\index.js":"9","D:\\diplom\\client\\src\\utils\\consts.js":"10","D:\\diplom\\client\\src\\pages\\Auth.js":"11","D:\\diplom\\client\\src\\pages\\Shop.js":"12","D:\\diplom\\client\\src\\pages\\Basket.js":"13","D:\\diplom\\client\\src\\pages\\DevicePage.js":"14","D:\\diplom\\client\\src\\pages\\Admin.js":"15","D:\\diplom\\client\\src\\http\\deviceAPI.js":"16","D:\\diplom\\client\\src\\components\\Pages.js":"17","D:\\diplom\\client\\src\\components\\DeviceList.js":"18","D:\\diplom\\client\\src\\components\\BrandBar.js":"19","D:\\diplom\\client\\src\\components\\TypeBar.js":"20","D:\\diplom\\client\\src\\components\\modals\\CreateDevice.js":"21","D:\\diplom\\client\\src\\components\\modals\\CreateBrand.js":"22","D:\\diplom\\client\\src\\components\\modals\\CreateType.js":"23","D:\\diplom\\client\\src\\components\\DeviceItem.js":"24","D:\\diplom\\client\\src\\components\\Search\\Search.js":"25","D:\\diplom\\client\\src\\hooks\\useOnClickOutside.js":"26"},{"size":439,"mtime":1611985807000,"results":"27","hashOfConfig":"28"},{"size":977,"mtime":1686783955872,"results":"29","hashOfConfig":"28"},{"size":544,"mtime":1686783231936,"results":"30","hashOfConfig":"28"},{"size":1298,"mtime":1684169280677,"results":"31","hashOfConfig":"28"},{"size":2183,"mtime":1686784922504,"results":"32","hashOfConfig":"28"},{"size":945,"mtime":1686783722292,"results":"33","hashOfConfig":"28"},{"size":694,"mtime":1683910176025,"results":"34","hashOfConfig":"28"},{"size":870,"mtime":1683907480438,"results":"35","hashOfConfig":"28"},{"size":407,"mtime":1611985807000,"results":"36","hashOfConfig":"28"},{"size":228,"mtime":1611985807000,"results":"37","hashOfConfig":"28"},{"size":3272,"mtime":1686783378356,"results":"38","hashOfConfig":"28"},{"size":1538,"mtime":1684170035877,"results":"39","hashOfConfig":"28"},{"size":1268,"mtime":1686785835559,"results":"40","hashOfConfig":"28"},{"size":3306,"mtime":1686785214928,"results":"41","hashOfConfig":"28"},{"size":1549,"mtime":1611985807000,"results":"42","hashOfConfig":"28"},{"size":1661,"mtime":1686785465328,"results":"43","hashOfConfig":"28"},{"size":801,"mtime":1611985807000,"results":"44","hashOfConfig":"28"},{"size":491,"mtime":1611985807000,"results":"45","hashOfConfig":"28"},{"size":759,"mtime":1611985807000,"results":"46","hashOfConfig":"28"},{"size":752,"mtime":1611985807000,"results":"47","hashOfConfig":"28"},{"size":6115,"mtime":1683911527534,"results":"48","hashOfConfig":"28"},{"size":1380,"mtime":1683911619524,"results":"49","hashOfConfig":"28"},{"size":1383,"mtime":1683905794423,"results":"50","hashOfConfig":"28"},{"size":1086,"mtime":1683911812976,"results":"51","hashOfConfig":"28"},{"size":2380,"mtime":1684233184775,"results":"52","hashOfConfig":"28"},{"size":699,"mtime":1684229529270,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"524p2w",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"D:\\diplom\\client\\src\\index.js",[],["113","114"],"D:\\diplom\\client\\src\\App.js",["115"],"D:\\diplom\\client\\src\\store\\UserStore.js",[],"D:\\diplom\\client\\src\\store\\DeviceStore.js",[],"D:\\diplom\\client\\src\\components\\NavBar.js",[],"D:\\diplom\\client\\src\\components\\AppRouter.js",[],"D:\\diplom\\client\\src\\http\\userAPI.js",[],"D:\\diplom\\client\\src\\routes.js",[],"D:\\diplom\\client\\src\\http\\index.js",[],"D:\\diplom\\client\\src\\utils\\consts.js",[],"D:\\diplom\\client\\src\\pages\\Auth.js",["116"],"D:\\diplom\\client\\src\\pages\\Shop.js",["117","118"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 3).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\diplom\\client\\src\\pages\\Basket.js",["119","120","121","122","123","124","125","126","127","128"],"D:\\diplom\\client\\src\\pages\\DevicePage.js",["129","130","131"],"D:\\diplom\\client\\src\\pages\\Admin.js",[],"D:\\diplom\\client\\src\\http\\deviceAPI.js",["132"],"D:\\diplom\\client\\src\\components\\Pages.js",[],"D:\\diplom\\client\\src\\components\\DeviceList.js",[],"D:\\diplom\\client\\src\\components\\BrandBar.js",[],"D:\\diplom\\client\\src\\components\\TypeBar.js",["133"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\diplom\\client\\src\\components\\modals\\CreateDevice.js",["134","135"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\diplom\\client\\src\\components\\modals\\CreateBrand.js",["136"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить бренд\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название бренда\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\diplom\\client\\src\\components\\modals\\CreateType.js",[],"D:\\diplom\\client\\src\\components\\DeviceItem.js",[],"D:\\diplom\\client\\src\\components\\Search\\Search.js",["137","138","139","140"],"import './Search.css';\nimport { FiX, FiSearch, FiChevronLeft } from 'react-icons/fi';\nimport {Button} from \"react-bootstrap\";\nimport {Form} from \"react-bootstrap\";\nimport { ChangeEvent, FormEvent, useEffect, useRef, useState } from 'react';\n// import { useActions } from '../../hooks/useActions';\nimport classNames from 'classnames';\n// import { useTypedSelector } from '../../hooks/useTypedSelector';\nimport useOnClickOutside from '../../hooks/useOnClickOutside';\nconst Search = ({className}) => {\n    const [value, setValue] = useState('');\n    const [search, setSearch] = useState('');\n    const [visible, setVisible] = useState(false);\n    // const { setSearch, setVisible } = useActions();\n    // const { visible } = useTypedSelector((state) => state.searchReducer);\n    const inputRef = useRef(null);\n    const formRef = useRef(null);\n\n    const onChangeHandle = (e) => {\n        setValue(e.target.value);\n    };\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setSearch(value);\n        //Router redirect on search page\n    };\n\n    const handleClearInput = () => {\n        setValue('');\n        setVisible(false);\n    };\n\n    const openSearch = () => {\n        setVisible(true);\n        inputRef.current?.focus();\n    };\n\n    useOnClickOutside(formRef, () => setVisible(false));\n\n\n    return (\n        <>\n            <Form onSubmit={submitForm} ref={formRef} className={classNames('search__form', className, visible && 'search__form__visible')}>\n                <Form.Control ref={inputRef} className={'search__searchRow'} value={value} onChange={onChangeHandle} placeholder=\"Поиск...\"/>\n                <Button type=\"button\" className={'search__hideSearch'} variant=\"link\" onClick={() => setVisible(false)}>\n                    <FiChevronLeft />\n                </Button>\n                <Button type=\"button\" className={classNames('search__closeButton', value && 'search__closeButton_active')} variant=\"link\" onClick={handleClearInput}>\n                    <FiX />\n                </Button>\n                <Button type=\"button\" className={'search__searchButton'} variant=\"link\">\n                    <FiSearch />\n                </Button>\n            </Form>\n            <Button className={'search__showSearch'} variant=\"link\" onClick={openSearch}>\n                <FiSearch />\n            </Button>\n        </>\n    );\n};\n\nexport default Search;\n","D:\\diplom\\client\\src\\hooks\\useOnClickOutside.js",["141"],"import { useEffect, RefObject } from 'react';\r\n\r\nconst useOnClickOutside = (ref, handler) => {\r\n    useEffect(() => {\r\n        const listener = (event) => {\r\n            const el = ref?.current;\r\n            if (!el || el.contains((event?.target) || null)) {\r\n                return;\r\n            }\r\n\r\n            handler(event);\r\n        };\r\n\r\n        document.addEventListener('mousedown', listener);\r\n        document.addEventListener('touchstart', listener);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', listener);\r\n            document.removeEventListener('touchstart', listener);\r\n        };\r\n    }, [ref, handler]);\r\n};\r\n\r\nexport default useOnClickOutside;",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":22,"column":8,"nodeType":"148","endLine":22,"endColumn":10,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":7,"column":22,"nodeType":"152","messageId":"153","endLine":7,"endColumn":33},{"ruleId":"146","severity":1,"message":"154","line":23,"column":8,"nodeType":"148","endLine":23,"endColumn":10,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"154","line":30,"column":8,"nodeType":"148","endLine":30,"endColumn":65,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"157","line":2,"column":17,"nodeType":"152","messageId":"153","endLine":2,"endColumn":21},{"ruleId":"150","severity":1,"message":"158","line":2,"column":23,"nodeType":"152","messageId":"153","endLine":2,"endColumn":26},{"ruleId":"150","severity":1,"message":"159","line":2,"column":39,"nodeType":"152","messageId":"153","endLine":2,"endColumn":44},{"ruleId":"150","severity":1,"message":"160","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":15},{"ruleId":"150","severity":1,"message":"161","line":4,"column":9,"nodeType":"152","messageId":"153","endLine":4,"endColumn":16},{"ruleId":"150","severity":1,"message":"162","line":4,"column":18,"nodeType":"152","messageId":"153","endLine":4,"endColumn":27},{"ruleId":"150","severity":1,"message":"163","line":5,"column":29,"nodeType":"152","messageId":"153","endLine":5,"endColumn":43},{"ruleId":"150","severity":1,"message":"164","line":6,"column":9,"nodeType":"152","messageId":"153","endLine":6,"endColumn":21},{"ruleId":"150","severity":1,"message":"165","line":6,"column":23,"nodeType":"152","messageId":"153","endLine":6,"endColumn":41},{"ruleId":"146","severity":1,"message":"166","line":22,"column":8,"nodeType":"148","endLine":22,"endColumn":10,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"161","line":4,"column":9,"nodeType":"152","messageId":"153","endLine":4,"endColumn":16},{"ruleId":"150","severity":1,"message":"165","line":6,"column":23,"nodeType":"152","messageId":"153","endLine":6,"endColumn":41},{"ruleId":"146","severity":1,"message":"168","line":20,"column":8,"nodeType":"148","endLine":20,"endColumn":10,"suggestions":"169"},{"ruleId":"150","severity":1,"message":"170","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"150","severity":1,"message":"158","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":11},{"ruleId":"150","severity":1,"message":"171","line":5,"column":36,"nodeType":"152","messageId":"153","endLine":5,"endColumn":48},{"ruleId":"146","severity":1,"message":"154","line":18,"column":8,"nodeType":"148","endLine":18,"endColumn":10,"suggestions":"172"},{"ruleId":"150","severity":1,"message":"173","line":4,"column":22,"nodeType":"152","messageId":"153","endLine":4,"endColumn":32},{"ruleId":"150","severity":1,"message":"174","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":21},{"ruleId":"150","severity":1,"message":"175","line":5,"column":23,"nodeType":"152","messageId":"153","endLine":5,"endColumn":32},{"ruleId":"150","severity":1,"message":"176","line":5,"column":34,"nodeType":"152","messageId":"153","endLine":5,"endColumn":43},{"ruleId":"150","severity":1,"message":"177","line":12,"column":12,"nodeType":"152","messageId":"153","endLine":12,"endColumn":18},{"ruleId":"150","severity":1,"message":"178","line":1,"column":21,"nodeType":"152","messageId":"153","endLine":1,"endColumn":30},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["181"],"no-unused-vars","'ADMIN_ROUTE' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["182"],["183"],"'Card' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'bigStar' is defined but never used.","'NavLink' is defined but never used.","'useParams' is defined but never used.","'fetchOneDevice' is defined but never used.","'BASKET_ROUTE' is defined but never used.","'REGISTRATION_ROUTE' is defined but never used.","React Hook useEffect has a missing dependency: 'user.user.id'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'id' and 'user.user.id'. Either include them or remove the dependency array.",["185"],"'jwt_decode' is defined but never used.","'fetchDevices' is defined but never used.",["186"],"'createType' is defined but never used.","'ChangeEvent' is defined but never used.","'FormEvent' is defined but never used.","'useEffect' is defined but never used.","'search' is assigned a value but never used.","'RefObject' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"189","fix":"197"},"Update the dependencies array to be: [user]",{"range":"198","text":"199"},"Update the dependencies array to be: [device]",{"range":"200","text":"201"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"202","text":"203"},"Update the dependencies array to be: [user.user.id]",{"range":"204","text":"205"},"Update the dependencies array to be: [id, user.user.id]",{"range":"206","text":"207"},{"range":"208","text":"201"},[758,760],"[user]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[799,801],"[user.user.id]",[927,929],"[id, user.user.id]",[747,749]]