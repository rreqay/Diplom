[{"D:\\diplom\\client\\src\\index.js":"1","D:\\diplom\\client\\src\\App.js":"2","D:\\diplom\\client\\src\\store\\UserStore.js":"3","D:\\diplom\\client\\src\\store\\DeviceStore.js":"4","D:\\diplom\\client\\src\\components\\NavBar.js":"5","D:\\diplom\\client\\src\\components\\AppRouter.js":"6","D:\\diplom\\client\\src\\http\\userAPI.js":"7","D:\\diplom\\client\\src\\routes.js":"8","D:\\diplom\\client\\src\\http\\index.js":"9","D:\\diplom\\client\\src\\utils\\consts.js":"10","D:\\diplom\\client\\src\\pages\\Auth.js":"11","D:\\diplom\\client\\src\\pages\\Shop.js":"12","D:\\diplom\\client\\src\\pages\\Basket.js":"13","D:\\diplom\\client\\src\\pages\\DevicePage.js":"14","D:\\diplom\\client\\src\\pages\\Admin.js":"15","D:\\diplom\\client\\src\\http\\deviceAPI.js":"16","D:\\diplom\\client\\src\\components\\Pages.js":"17","D:\\diplom\\client\\src\\components\\DeviceList.js":"18","D:\\diplom\\client\\src\\components\\BrandBar.js":"19","D:\\diplom\\client\\src\\components\\TypeBar.js":"20","D:\\diplom\\client\\src\\components\\modals\\CreateDevice.js":"21","D:\\diplom\\client\\src\\components\\modals\\CreateBrand.js":"22","D:\\diplom\\client\\src\\components\\modals\\CreateType.js":"23","D:\\diplom\\client\\src\\components\\DeviceItem.js":"24","D:\\diplom\\client\\src\\components\\Search\\Search.js":"25","D:\\diplom\\client\\src\\hooks\\useOnClickOutside.js":"26","D:\\diplom\\client\\src\\store\\SearchStore.js":"27","D:\\diplom\\client\\src\\components\\Search\\components\\SearchList.js":"28","D:\\diplom\\client\\src\\components\\BasketItem.js":"29","D:\\diplom\\client\\src\\components\\rating\\rating.js":"30","D:\\diplom\\client\\src\\components\\Rating\\Rating.js":"31"},{"size":521,"mtime":1686950797951,"results":"32","hashOfConfig":"33"},{"size":977,"mtime":1686783955872,"results":"34","hashOfConfig":"33"},{"size":544,"mtime":1686783231936,"results":"35","hashOfConfig":"33"},{"size":1298,"mtime":1686952946880,"results":"36","hashOfConfig":"33"},{"size":2188,"mtime":1687040512049,"results":"37","hashOfConfig":"33"},{"size":945,"mtime":1686783722292,"results":"38","hashOfConfig":"33"},{"size":694,"mtime":1683910176025,"results":"39","hashOfConfig":"33"},{"size":870,"mtime":1683907480438,"results":"40","hashOfConfig":"33"},{"size":407,"mtime":1611985807000,"results":"41","hashOfConfig":"33"},{"size":228,"mtime":1611985807000,"results":"42","hashOfConfig":"33"},{"size":3272,"mtime":1686783378356,"results":"43","hashOfConfig":"33"},{"size":1549,"mtime":1686859011399,"results":"44","hashOfConfig":"33"},{"size":1973,"mtime":1686962745041,"results":"45","hashOfConfig":"33"},{"size":3453,"mtime":1687071968596,"results":"46","hashOfConfig":"33"},{"size":1549,"mtime":1611985807000,"results":"47","hashOfConfig":"33"},{"size":2032,"mtime":1686957285710,"results":"48","hashOfConfig":"33"},{"size":832,"mtime":1686858982291,"results":"49","hashOfConfig":"33"},{"size":491,"mtime":1611985807000,"results":"50","hashOfConfig":"33"},{"size":1084,"mtime":1686859585816,"results":"51","hashOfConfig":"33"},{"size":1041,"mtime":1686859485576,"results":"52","hashOfConfig":"33"},{"size":6115,"mtime":1683911527534,"results":"53","hashOfConfig":"33"},{"size":1380,"mtime":1683911619524,"results":"54","hashOfConfig":"33"},{"size":1383,"mtime":1683905794423,"results":"55","hashOfConfig":"33"},{"size":1048,"mtime":1686985323043,"results":"56","hashOfConfig":"33"},{"size":2907,"mtime":1686955454876,"results":"57","hashOfConfig":"33"},{"size":699,"mtime":1684229529270,"results":"58","hashOfConfig":"33"},{"size":814,"mtime":1686953635795,"results":"59","hashOfConfig":"33"},{"size":1575,"mtime":1686966398824,"results":"60","hashOfConfig":"33"},{"size":2170,"mtime":1686966384174,"results":"61","hashOfConfig":"33"},{"size":964,"mtime":1687071971035,"results":"62","hashOfConfig":"33"},{"size":964,"mtime":1687071971035,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"524p2w",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\diplom\\client\\src\\index.js",[],["140","141"],"D:\\diplom\\client\\src\\App.js",["142"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(data)\n            user.setIsAuth(true)\n            if (data.role === 'ADMIN')\n                user.setIsAdmin(true)\n            else user.setIsAdmin(false)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\diplom\\client\\src\\store\\UserStore.js",[],"D:\\diplom\\client\\src\\store\\DeviceStore.js",[],"D:\\diplom\\client\\src\\components\\NavBar.js",[],"D:\\diplom\\client\\src\\components\\AppRouter.js",[],"D:\\diplom\\client\\src\\http\\userAPI.js",[],"D:\\diplom\\client\\src\\routes.js",[],"D:\\diplom\\client\\src\\http\\index.js",[],"D:\\diplom\\client\\src\\utils\\consts.js",[],"D:\\diplom\\client\\src\\pages\\Auth.js",["143"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, ADMIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(data)\n            user.setIsAuth(true)\n            if (data.role === 'ADMIN')\n                user.setIsAdmin(true)\n            else user.setIsAdmin(false)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","D:\\diplom\\client\\src\\pages\\Shop.js",["144","145"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, device.limit).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\diplom\\client\\src\\pages\\Basket.js",["146","147","148","149","150","151","152","153"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Container, Image, Row, Col} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {NavLink, useParams} from 'react-router-dom'\nimport {fetchBasketDevcies, deleteBasketDevice, fetchOneBasketDevice} from \"../http/deviceAPI\";\nimport {BASKET_ROUTE, REGISTRATION_ROUTE} from \"../utils/consts\";\nimport { useContext } from 'react';\nimport {Context} from \"../index\";\nimport BasketItem from \"../components/BasketItem\";\n\n\nconst Basket = () => {\n    const [devices, setDevices] = useState([])\n    const {user} = useContext(Context)\n\n    useEffect(() => {\n        fetchBasketDevcies(user.user.id).then(data => {\n            setDevices(data.rows.map(basketDevice => {\n                return basketDevice.device\n            }))\n        })\n    }, [])\n\n    const onDeleteClick = (device) => {\n        fetchOneBasketDevice(device.id, user.user.id).then(data => {\n            deleteBasketDevice(data.basket_devices[0].id).then(() => {\n                fetchBasketDevcies(user.user.id).then(data => {\n                    setDevices(data.rows.map(basketDevice => {\n                        return basketDevice.device\n                    }))\n                })\n            })\n        })\n    }\n\n\n    return (\n        <Container>\n                <Row className=\"d-flex flex-column m-3\">\n                    <h3>Корзина</h3>\n                </Row>\n                    <Col className=\"d-flex flex-column m-3\">\n                        <Row style={{cursor: 'pointer' }} border={\"light\"} >\n                            {devices.map(device => <BasketItem key={device.id} device={device} onDelete={() => onDeleteClick(device)} />\n                            )}\n                        </Row>\n                    </Col>\n                        <Button className=\"d-flex flex-column m-3\" variant={\"outline-dark\"}>Оформить заказ</Button>\n        </Container>\n\n    );\n};\n\nexport default Basket;\n\n\n","D:\\diplom\\client\\src\\pages\\DevicePage.js",["154","155","156","157"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {NavLink, useParams} from 'react-router-dom'\nimport Rating from '../components/Rating/Rating'\nimport {createBasketDevice, fetchOneBasketDevice, fetchOneDevice, fetchUserBasket} from \"../http/deviceAPI\";\nimport {BASKET_ROUTE, REGISTRATION_ROUTE} from \"../utils/consts\";\nimport { useContext } from 'react';\nimport {Context} from \"../index\";\nimport {useHistory} from 'react-router-dom'\n\nconst DevicePage = () => {\n    const history = useHistory()\n    const [device, setDevice] = useState({info: []})\n    const [isOnBasket, setOnBasket] = useState(false)\n    const {user} = useContext(Context)\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n        fetchOneBasketDevice(id, user.user.id).then(data => data !== null && setOnBasket(true))\n    }, [])\n\n    const onAddBasket = () => {\n        fetchUserBasket(user.user.id).then(basket => {\n            console.log(basket)\n            createBasketDevice(id, basket.id).then(() => {setOnBasket(true)})\n        })\n    }\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{device.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-around\"\n                            // style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\n                        >\n                           <h5><Rating></Rating></h5><h5 className=\"d-flex align-items-center justify-content-around\">{device.rating}</h5>\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {device.price} руб.</h3>\n                        {!isOnBasket ?\n                            <Button onClick={onAddBasket} variant={\"outline-dark\"}>\n                                Добавить в корзину\n                            </Button>\n                            : \n                            <Button onClick={() => history.push(BASKET_ROUTE)} variant={\"outline-dark\"}>\n                                Перейти в корзину\n                            </Button>\n                        }\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;\n","D:\\diplom\\client\\src\\pages\\Admin.js",[],"D:\\diplom\\client\\src\\http\\deviceAPI.js",["158"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n\nexport const fetchDevicesByName = async (name) => {\n    if (name && name !== ''){\n        const {data} = await $host.get(`api/device/getAllByName/${name}`)\n        return data\n    }\n    return null\n}\n\nexport const fetchBasketDevcies = async (userId) => {\n    const {data} = await $host.get(`api/basket/getBasketDevices/${userId}`)\n    return data\n}\n\nexport const fetchUserBasket = async (userId) => {\n    const {data} = await $host.get(`api/basket/getUserBasket?userId=${userId}`)\n    return data\n}\n\nexport const createBasketDevice = async (deviceId, basketId) => {\n    const {data} = await $host.post('api/basket/createBasketDevice', {deviceId, basketId})\n    return data\n}\n\nexport const fetchOneBasketDevice = async (deviceId, userId) => {\n    const {data} = await $host.get(`api/basket/getOneBasketDevice?deviceId=${deviceId}&userId=${userId}`)\n    return data\n}\n\nexport const deleteBasketDevice = async (basketDeviceId) => {\n    const {data} = await $host.delete(`api/basket/deleteBasketDevice/${basketDeviceId}`)\n    return data\n}\n","D:\\diplom\\client\\src\\components\\Pages.js",[],"D:\\diplom\\client\\src\\components\\DeviceList.js",[],"D:\\diplom\\client\\src\\components\\BrandBar.js",[],"D:\\diplom\\client\\src\\components\\TypeBar.js",["159"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={!device.selectedType.id }\n                    onClick={() => device.setSelectedType({})}\n                >\n                    Показать всё\n                </ListGroup.Item>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\diplom\\client\\src\\components\\modals\\CreateDevice.js",["160","161"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\diplom\\client\\src\\components\\modals\\CreateBrand.js",["162"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить бренд\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название бренда\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\diplom\\client\\src\\components\\modals\\CreateType.js",[],"D:\\diplom\\client\\src\\components\\DeviceItem.js",[],"D:\\diplom\\client\\src\\components\\Search\\Search.js",["163","164","165"],"import './Search.css';\nimport { FiX, FiSearch, FiChevronLeft } from 'react-icons/fi';\nimport {Button} from \"react-bootstrap\";\nimport {Form} from \"react-bootstrap\";\nimport { ChangeEvent, FormEvent, useEffect, useRef, useState } from 'react';\nimport { Context } from '../..';\nimport { useContext } from 'react';\nimport { fetchDevicesByName } from '../../http/deviceAPI';\n// import { useActions } from '../../hooks/useActions';\nimport classNames from 'classnames';\n// import { useTypedSelector } from '../../hooks/useTypedSelector';\nimport useOnClickOutside from '../../hooks/useOnClickOutside';\nimport SearchList from './components/SearchList';\nimport './Search.css'\n\nconst Search = ({className}) => {\n    const { search } = useContext(Context)\n    const [value, setValue] = useState('');\n    // const [search, setSearch] = useState('');\n    const [visible, setVisible] = useState(false);\n    const inputRef = useRef(null);\n    const formRef = useRef(null);\n    \n    const onChangeHandle = (e) => {\n        setValue(e.target.value);\n    };\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setValue(e.target.value);\n        //Router redirect on search page\n    };\n\n    const handleClearInput = () => {\n        setValue('');\n        setVisible(false);\n        search.setDevices({})\n        search.setTotalCount(0)\n    };\n\n    const openSearch = () => {\n        setVisible(true);\n        inputRef.current?.focus();\n    };\n\n    useOnClickOutside(formRef, () => setVisible(false));\n\n    useEffect(() => {\n        fetchDevicesByName(value).then(data => {\n            if (data){\n                search.setDevices(data.rows)\n                search.setTotalCount(data.count)\n            }\n        })\n    }, [value])\n\n    return (\n        <>\n            <Form onSubmit={submitForm} ref={formRef} className={classNames('search__form', className, visible && 'search__form__visible')}>\n                <Form.Control ref={inputRef} className={'search__searchRow'} value={value} onChange={onChangeHandle} onClick={() => setVisible(true)} placeholder=\"Поиск...\"/>\n                <Button type=\"button\" className={'search__hideSearch'} variant=\"link\" onClick={() => setVisible(false)}>\n                    <FiChevronLeft />\n                </Button>\n                <Button type=\"button\" className={classNames('search__closeButton', value && 'search__closeButton_active')} variant=\"link\" onClick={handleClearInput}>\n                    <FiX />\n                </Button>\n                <Button type=\"button\" className={'search__searchButton'} variant=\"link\">\n                    <FiSearch />\n                </Button>\n                {visible && <SearchList setVisible={setVisible}/>}\n            </Form>\n            <Button className={'search__showSearch'} variant=\"link\" onClick={openSearch}>\n            <FiSearch />\n            </Button>\n            \n        </>\n    );\n};\n\nexport default Search;\n","D:\\diplom\\client\\src\\hooks\\useOnClickOutside.js",["166"],"import { useEffect, RefObject } from 'react';\r\n\r\nconst useOnClickOutside = (ref, handler) => {\r\n    useEffect(() => {\r\n        const listener = (event) => {\r\n            const el = ref?.current;\r\n            if (!el || el.contains((event?.target) || null)) {\r\n                return;\r\n            }\r\n\r\n            handler(event);\r\n        };\r\n\r\n        document.addEventListener('mousedown', listener);\r\n        document.addEventListener('touchstart', listener);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', listener);\r\n            document.removeEventListener('touchstart', listener);\r\n        };\r\n    }, [ref, handler]);\r\n};\r\n\r\nexport default useOnClickOutside;","D:\\diplom\\client\\src\\store\\SearchStore.js",[],"D:\\diplom\\client\\src\\components\\Search\\components\\SearchList.js",[],"D:\\diplom\\client\\src\\components\\BasketItem.js",["167","168","169","170","171"],"import React, { useContext } from 'react'\r\nimport { Row, Container, Button, Col } from 'react-bootstrap'\r\nimport Image from \"react-bootstrap/Image\";\r\nimport star from '../assets/star.png'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {DEVICE_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport { deleteBasketDevice } from '../http/deviceAPI';\r\nimport { fetchOneBasketDevice } from '../http/deviceAPI';\r\nimport { Context } from '..';\r\n\r\n\r\n\r\nconst BasketItem = ({device, onDelete}) => {\r\n    const {user} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    const onRedirectClick = () => {\r\n        history.push(DEVICE_ROUTE + '/' + device.id)\r\n    }\r\n\r\n    return (\r\n                <Row className='m-1' style={{ Stroke: 'red', }}>\r\n            <Col md={2} style={{ width: 150, cursor: 'pointer' }}>\r\n                <Image className=\"d-flex flex-column m-3\" width={150} height={150} src={process.env.REACT_APP_API_URL + device.img} onClick={onRedirectClick} />\r\n            </Col>\r\n\r\n            <Col style={{ width: 500, cursor: 'pointer' }}>\r\n                <div className=\"d-flex flex-column m-3\" onClick={onRedirectClick}>{device.name} </div>\r\n            </Col>\r\n\r\n            <Col style={{ width: 150, cursor: 'pointer' }}>\r\n                <div className=\"d-flex flex-column m-3\" onClick={onRedirectClick}>{device.price} Руб.</div>\r\n            </Col>\r\n\r\n            <Col style={{ width: 150}}>\r\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div>{device.rating}</div>\r\n                        <Image className=\"d-flex flex-column m-1\"  width={18} height={18} src={star} />\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col style={{ width: 150, height: 50, cursor: 'pointer' }}>\r\n                <Button className=\"d-flex flex-column m-3\" variant='danger' onClick={onDelete}>Удалить из корзины</Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default BasketItem\r\n\r\n// style={{width: 150, cursor: 'pointer'}} border={\"light\"}","D:\\diplom\\client\\src\\components\\rating\\rating.js",["172"],"import {Container} from \"react-bootstrap\";\r\nimport { useState } from 'react';\r\n\r\nimport classNames from 'classnames';\r\nimport './rating.css'\r\n\r\nconst Rating = () => {\r\n// const ratingItemsList = document.querySelectorAll('.rating_item');\r\n// const ratingItemsArray = Array.prototype.slice.call(ratingItemsList);\r\n\r\n// ratingItemsArray.forEach(item => \r\n//     item.addEventListener('click', () => {\r\n//         const{ itemValue } = item.dataset;\r\n//         item.parentNode.dataset.totalValue = item.dataset.itemValue\r\n//     })\r\n\r\n// );\r\n\r\nconst [value, setValue] = useState()\r\nconst stars = [1, 2, 3, 4, 5]\r\n\r\nconst onStarClick = (e) => {\r\n    setValue(e.target.value)\r\n} \r\n\r\n    return (\r\n            <Container>\r\n                {stars.map(star => {\r\n                    <div className={classNames(value === star && \"rating__item__selected\", \"rating__item\")} onClick={onStarClick}>★</div>\r\n                })}\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default Rating","D:\\diplom\\client\\src\\components\\Rating\\Rating.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":22,"column":8,"nodeType":"179","endLine":22,"endColumn":10,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":7,"column":22,"nodeType":"183","messageId":"184","endLine":7,"endColumn":33},{"ruleId":"177","severity":1,"message":"185","line":23,"column":8,"nodeType":"179","endLine":23,"endColumn":10,"suggestions":"186"},{"ruleId":"177","severity":1,"message":"185","line":30,"column":8,"nodeType":"179","endLine":30,"endColumn":65,"suggestions":"187"},{"ruleId":"181","severity":1,"message":"188","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":21},{"ruleId":"181","severity":1,"message":"189","line":2,"column":34,"nodeType":"183","messageId":"184","endLine":2,"endColumn":39},{"ruleId":"181","severity":1,"message":"190","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"191","line":4,"column":9,"nodeType":"183","messageId":"184","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"192","line":4,"column":18,"nodeType":"183","messageId":"184","endLine":4,"endColumn":27},{"ruleId":"181","severity":1,"message":"193","line":6,"column":9,"nodeType":"183","messageId":"184","endLine":6,"endColumn":21},{"ruleId":"181","severity":1,"message":"194","line":6,"column":23,"nodeType":"183","messageId":"184","endLine":6,"endColumn":41},{"ruleId":"177","severity":1,"message":"195","line":22,"column":8,"nodeType":"179","endLine":22,"endColumn":10,"suggestions":"196"},{"ruleId":"181","severity":1,"message":"190","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"191","line":4,"column":9,"nodeType":"183","messageId":"184","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"194","line":7,"column":23,"nodeType":"183","messageId":"184","endLine":7,"endColumn":41},{"ruleId":"177","severity":1,"message":"197","line":21,"column":8,"nodeType":"179","endLine":21,"endColumn":10,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":18},{"ruleId":"181","severity":1,"message":"200","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":11},{"ruleId":"181","severity":1,"message":"201","line":5,"column":36,"nodeType":"183","messageId":"184","endLine":5,"endColumn":48},{"ruleId":"177","severity":1,"message":"185","line":18,"column":8,"nodeType":"179","endLine":18,"endColumn":10,"suggestions":"202"},{"ruleId":"181","severity":1,"message":"203","line":4,"column":22,"nodeType":"183","messageId":"184","endLine":4,"endColumn":32},{"ruleId":"181","severity":1,"message":"204","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":21},{"ruleId":"181","severity":1,"message":"205","line":5,"column":23,"nodeType":"183","messageId":"184","endLine":5,"endColumn":32},{"ruleId":"177","severity":1,"message":"206","line":55,"column":8,"nodeType":"179","endLine":55,"endColumn":15,"suggestions":"207"},{"ruleId":"181","severity":1,"message":"208","line":1,"column":21,"nodeType":"183","messageId":"184","endLine":1,"endColumn":30},{"ruleId":"181","severity":1,"message":"209","line":2,"column":15,"nodeType":"183","messageId":"184","endLine":2,"endColumn":24},{"ruleId":"181","severity":1,"message":"210","line":6,"column":23,"nodeType":"183","messageId":"184","endLine":6,"endColumn":33},{"ruleId":"181","severity":1,"message":"211","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":28},{"ruleId":"181","severity":1,"message":"212","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":30},{"ruleId":"181","severity":1,"message":"213","line":14,"column":12,"nodeType":"183","messageId":"184","endLine":14,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":28,"column":33,"nodeType":"216","messageId":"217","endLine":28,"endColumn":35},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["220"],"no-unused-vars","'ADMIN_ROUTE' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["221"],["222"],"'Card' is defined but never used.","'Image' is defined but never used.","'bigStar' is defined but never used.","'NavLink' is defined but never used.","'useParams' is defined but never used.","'BASKET_ROUTE' is defined but never used.","'REGISTRATION_ROUTE' is defined but never used.","React Hook useEffect has a missing dependency: 'user.user.id'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has missing dependencies: 'id' and 'user.user.id'. Either include them or remove the dependency array.",["224"],"'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.",["225"],"'createType' is defined but never used.","'ChangeEvent' is defined but never used.","'FormEvent' is defined but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["226"],"'RefObject' is defined but never used.","'Container' is defined but never used.","'SHOP_ROUTE' is defined but never used.","'deleteBasketDevice' is defined but never used.","'fetchOneBasketDevice' is defined but never used.","'user' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"229","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [user]",{"range":"240","text":"241"},"Update the dependencies array to be: [device]",{"range":"242","text":"243"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"244","text":"245"},"Update the dependencies array to be: [user.user.id]",{"range":"246","text":"247"},"Update the dependencies array to be: [id, user.user.id]",{"range":"248","text":"249"},{"range":"250","text":"243"},"Update the dependencies array to be: [search, value]",{"range":"251","text":"252"},[758,760],"[user]",[875,877],"[device]",[1118,1175],"[device.page, device.selectedType, device.selectedBrand, device]",[825,827],"[user.user.id]",[976,978],"[id, user.user.id]",[747,749],[1716,1723],"[search, value]"]